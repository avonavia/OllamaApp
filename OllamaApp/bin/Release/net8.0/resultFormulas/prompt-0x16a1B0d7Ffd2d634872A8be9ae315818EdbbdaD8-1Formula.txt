// Assembly name must be exactly as function name in Solidity contract
[assembly: FormulaAssembly("getReserves")]

namespace Sauron.Formula.getReserves
{
    public class getReservesFormula : IFormulaPlugin
    {
        // Formula signature will always be the same
        public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>> Formula(TransactionInfo info,
            IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
        {
            // Get reserve values from TransactionInfo object
            var reserve0 = (BigDecimal)info.Reserve0;
            var reserve1 = (BigDecimal)info.Reserve1;
            var blockTimestampLast = info.BlockTimestampLast;

            // Create result pairs
            var result = new List<KeyValuePair<string, BigDecimal>>();
            result.Add(new KeyValuePair<string, BigDecimal>("reserve0", reserve0));
            result.Add(new KeyValuePair<string, BigDecimal>("reserve1", reserve1));
            result.Add(new KeyValuePair<string, BigDecimal>("blockTimestampLast", new BigDecimal((decimal)blockTimestampLast)));

            return CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>>.Success(result);
        }
    }
}