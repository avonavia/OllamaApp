// Note that this is a simple translation of the Solidity function to C#. The error handling mechanism might need further adjustments based on your specific use case.

public static BigInteger Mul(BigInteger a, BigInteger b)
{
    if (a == 0)
        return 0;

    BigInteger c = a * b;

    // In C#, we don't have an equivalent of Solidity's require function that halts execution and throws an error message. Instead, we can throw an exception to indicate the overflow condition.
    if (c / a != b)
        throw new OverflowException("SafeMath: multiplication overflow");

    return c;
}