[assembly: FormulaAssembly("buyAndPICTUREs")]

namespace Sauron.Formula.buyAndPICTUREs
{
    public class buyAndPICTUREsFormula : IFormulaPlugin
    {
        public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?> Formula(TransactionInfo info,
            IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
        {
            if (info.Transfers == null || !info.Transfers.Any()) return null;

            // Check if the transaction has exactly one transfer and it's from the sender to the contract address
            var transferFromSenderToContract = info.Transfers.SingleOrDefault(t => t.FromAddress == info.From && t.ToAddress == info.To);
            if (transferFromSenderToContract == null) return null;

            // Calculate PNL for the sender, which is the negative of the amount sent to the contract minus the fee
            var pnl = -(transferFromSenderToContract.Amount - info.Fee);

            // Return the PNL for the sender
            return new CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?>
                (new[] { new KeyValuePair<string, BigDecimal>(info.From, pnl) });
        }
    }
}