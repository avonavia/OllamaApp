```csharp
[assembly: FormulaAssembly("getReserves")]

namespace Sauron.Formula.getReserves
{
    public class getReservesFormula : IFormulaPlugin
    {
        public CalculationResult<(BigDecimal Reserve0, BigDecimal Reserve1, uint BlockTimestampLast)> Formula(TransactionInfo info)
        {
            if (info.DecodedInfo == null || !info.DecodedInfo.TryGetValue("reserve0", out var reserve0Object) || !info.DecodedInfo.TryGetValue("reserve1", out var reserve1Object))
                return new CalculationResult<(BigDecimal Reserve0, BigDecimal Reserve1, uint BlockTimestampLast)?>(null);

            if (!BigInteger.TryParse((string)reserve0Object, out var reserve0) || !BigInteger.TryParse((string)reserve1Object, out var reserve1))
                return new CalculationResult<(BigDecimal Reserve0, BigDecimal Reserve1, uint BlockTimestampLast)?>(null);

            if (info.DecodedInfo.TryGetValue("blockTimestampLast", out var blockTimestampLastObject) && uint.TryParse((string)blockTimestampLastObject, out var blockTimestampLast))
                return new CalculationResult<(BigDecimal Reserve0, BigDecimal Reserve1, uint BlockTimestampLast)?>((new BigDecimal(reserve0), new BigDecimal(reserve1), blockTimestampLast));
            else
                return new CalculationResult<(BigDecimal Reserve0, BigDecimal Reserve1, uint BlockTimestampLast)?>(null);
        }
    }
}
```