```csharp
// The assembly name for the PNL calculation formula
[assembly: System.Reflection.AssemblyTitle("PNLCalculationFormula")]
using System;

public class PNLCalculator
{
    // Method to calculate PNL based on swap function parameters
    public static decimal CalculatePNL(decimal amount0Out, decimal amount1Out, decimal reserve0, decimal reserve1, bool isSameAddress)
    {
        // Calculate the fees (3% of the transfer)
        decimal fee0 = amount0Out * 0.03m;
        decimal fee1 = amount1Out * 0.03m;

        // If the receiving address is not the same as the sender's, calculate the PNL difference
        if (!isSameAddress)
            return (fee0 * reserve1 / (reserve0 + amount0Out - fee0)) - amount1Out;

        // If the addresses are the same, just subtract the fees from the amounts sent
        else
            return (amount0Out - fee0) + (amount1Out - fee1);
    }
}
```