//This is a representation of Solidity's getReserves() method in C#
   //Assembly name should be EXACTLY as function name in Solidity contract

[assembly: FormulaAssembly("getReserves")]

namespace Sauron.Formula.getReserves
{
    public class getReservesFormula : IFormulaPlugin
    {
        public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?> Formula(TransactionInfo info,
            IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
        {
            //Assuming that reserve0, reserve1 and blockTimestampLast are properties of TransactionInfo object.

            //Prepare the result as KeyValuePair list where key is a string representing the name of the value and BigDecimal is its value.
            var results = new List<KeyValuePair<string, BigDecimal>>();

            //Convert uint112 to BigDecimal and add it to the result list.
            results.Add(new KeyValuePair<string, BigDecimal>("_reserve0", (BigDecimal)info.Reserve0));

            //Convert uint112 to BigDecimal and add it to the result list.
            results.Add(new KeyValuePair<string, BigDecimal>("_reserve1", (BigDecimal)info.Reserve1));

            //Convert uint32 to BigDecimal and add it to the result list.
            results.Add(new KeyValuePair<string, BigDecimal>("_blockTimestampLast", new BigDecimal((decimal)info.BlockTimestampLast)));

            return CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?>.Success(results);
        }
    }
}