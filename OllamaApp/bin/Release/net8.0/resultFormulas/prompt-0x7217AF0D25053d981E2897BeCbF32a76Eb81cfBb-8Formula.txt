```csharp
// Assembly information for PNL calculation without messages for user
[assembly: System.Reflection.AssemblyTitle("PNL Calculation")]
[assembly: System.Reflection.AssemblyDescription("Calculate Profit and Loss for a UniswapV2 swap transaction.")]

using System;

public class PnlCalculator
{
    public decimal CalculatePnl(decimal amount0Out, decimal amount1Out, decimal reserve0, decimal reserve1, decimal balance0, decimal balance1, decimal feeRate)
    {
        // Calculate the amount of tokens that this contract has received during the swap
        decimal amount0In = Math.Max(balance0 - (reserve0 - amount0Out), 0);
        decimal amount1In = Math.Max(balance1 - (reserve1 - amount1Out), 0);

        // Calculate initial value of tokens in and out for the user
        decimal initialValue = amount0In * reserve1 / reserve0 + amount1In;
        decimal finalValue = amount0Out + amount1Out * reserve0 / reserve1;

        // Calculate PNL, including fee deduction if the user is selling tokens
        decimal pnl = (finalValue - initialValue) * (1 - feeRate);

        return pnl;
    }
}
```