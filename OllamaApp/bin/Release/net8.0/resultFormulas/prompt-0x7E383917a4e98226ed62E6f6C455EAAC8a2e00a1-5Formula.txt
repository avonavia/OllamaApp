// Assembly information for PNL calculation
   [assembly: FormulaAssembly("_mintFee")]

   namespace Sauron.Formula._mintFee
   {
       using Nethereum.Hex.BigEndian;
       using System;
       using System.Collections.Generic;
       using System.Linq;
       using System.Numerics;

       public class _mintFeeFormula : IFormulaPlugin
       {
           // Method for PNL calculation based on the Solidity contract method
           public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?> Formula(TransactionInfo info,
               IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
           {
               // Convert reservations from Hexadecimal to BigInteger for calculations
               var reserve0 = new BigInteger(info.Reserve0.HexToByteArray());
               var reserve1 = new BigInteger(info.Reserve1.HexToByteArray());

               // Get feeTo address and check if it's not zero
               var feeTo = info.FeeTo;
               bool feeOn = feeTo != "0x0000000000000000000000000000000