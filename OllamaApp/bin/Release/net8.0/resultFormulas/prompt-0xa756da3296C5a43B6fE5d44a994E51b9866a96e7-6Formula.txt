//Method to calculate PNL for transfers
    public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?> Formula(TransactionInfo info, IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
    {
        if (info.Transfers == null || !info.Transfers.Any() || tokenPrices == null)
        {
            return new CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?>
                ("Not enough data to calculate PNL");
        }

        var pnl = new Dictionary<string, BigDecimal>();

        foreach (var transfer in info.Transfers)
        {
            if (!pnl.ContainsKey(transfer.FromAddress))
            {
                pnl[transfer.FromAddress] = BigDecimal.Zero;
            }

            // Subtract the amount transferred from sender's PNL
            pnl[transfer.FromAddress] -= transfer.Amount * (BigDecimal)tokenPrices.FirstOrDefault(x => x.Key == transfer.TokenInfo.Symbol).Value;
        }

        return new CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?>(pnl.Select(kvp => new KeyValuePair<string, BigDecimal>(kvp.Key, kvp.Value)));
    }