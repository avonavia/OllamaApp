```csharp
[assembly: FormulaAssembly("GetReserves")]

namespace Sauron.Formula.GetReserves
{
    public class GetReservesFormula : IFormulaPlugin
    {
        public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?> Formula(TransactionInfo info,
            IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
        {
            var reserves = new List<KeyValuePair<string, BigDecimal>>();

            if (info.Reserve0 != null && info.Reserve1 != null && info.BlockTimestampLast != null)
            {
                reserves.Add(new KeyValuePair<string, BigDecimal>("Reserve0", info.Reserve0));
                reserves.Add(new KeyValuePair<string, BigDecimal>("Reserve1", info.Reserve1));
                reserves.Add(new KeyValuePair<string, BigDecimal>("BlockTimestampLast", (BigDecimal)info.BlockTimestampLast));
            }

            return new CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?> { Result = reserves };
        }
    }
}
```