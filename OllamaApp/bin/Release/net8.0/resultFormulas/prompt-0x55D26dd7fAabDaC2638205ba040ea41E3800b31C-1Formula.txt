```csharp
[assembly: FormulaAssembly("getReserves")]

namespace Sauron.Formula.getReserves
{
    public class getReservesFormula : IFormulaPlugin
    {
        public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?> Formula(TransactionInfo info,
            IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
        {
            // Extract reserve values and block timestamp from the transaction info
            var reserve0 = new BigDecimal(info.Reserve0);
            var reserve1 = new BigDecimal(info.Reserve1);
            var blockTimestampLast = (BigDecimal)info.BlockTimestampLast;

            // Construct the result as a collection of key-value pairs
            var results = new List<KeyValuePair<string, BigDecimal>>()
            {
                new KeyValuePair<string, BigDecimal>("reserve0", reserve0),
                new KeyValuePair<string, BigDecimal>("reserve1", reserve1),
                new KeyValuePair<string, BigDecimal>("blockTimestampLast", blockTimestampLast)
            };

            // Return the result in a CalculationResult object
            return new CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?>(results);
        }
    }
}
```