```csharp
[assembly: FormulaAssembly("getReserves")]
namespace Sauron.Formula.GetReserves
{
    public class GetReservesFormula : IFormulaPlugin
    {
        public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>> Formula(TransactionInfo info, IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
        {
            if (info.Reserve0 == null || info.Reserve1 == null || !info.BlockTimestampLast.HasValue)
                return new CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>> { Success = false };

            var result = new List<KeyValuePair<string, BigDecimal>>
            {
                new KeyValuePair<string, BigDecimal>("_reserve0", info.Reserve0),
                new KeyValuePair<string, BigDecimal>("_reserve1", info.Reserve1),
                new KeyValuePair<string, BigDecimal>("_blockTimestampLast", (BigDecimal)info.BlockTimestampLast.Value)
            };

            return new CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>> { Result = result, Success = true };
        }
    }
}
```