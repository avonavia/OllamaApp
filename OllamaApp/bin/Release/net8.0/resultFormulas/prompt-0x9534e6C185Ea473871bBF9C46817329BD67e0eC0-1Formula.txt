[assembly: FormulaAssembly("GetReserves")]

namespace Sauron.Formula.GetReserves
{
    public class GetReservesFormula : IFormulaPlugin
    {
        public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?> Formula(TransactionInfo info,
            IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
        {
            var result = new List<KeyValuePair<string, BigDecimal>>();

            if (info.DecodedCallData is UniswapV2PairCallData uniswapData && info.TokenInfo != null)
            {
                // Assuming reserve0 and reserve1 are part of the decoded call data
                var reserve0 = new BigDecimal(uniswapData.Reserve0);
                var reserve1 = new BigDecimal(uniswapData.Reserve1);

                // We return reserves as a pair with token symbol and reserve amount
                result.Add(new KeyValuePair<string, BigDecimal>(info.TokenInfo[0].Symbol, reserve0));
                result.Add(new KeyValuePair<string, BigDecimal>(info.TokenInfo[1].Symbol, reserve1));
            }

            return CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?>.Success(result);
        }
    }
}