// Make sure to add necessary using directives at the top of the file

[assembly: FormulaAssembly("getReserves")]
namespace Sauron.Formula.getReserves
{
    public class getReservesFormula : IFormulaPlugin
    {
        public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?> Formula(TransactionInfo info,
            IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
        {
            // Since this is a view function and doesn't modify the state, we only need to return reserves and block timestamp
            var reserve0 = new KeyValuePair<string, BigDecimal>("Reserve0", info.Reserve0);
            var reserve1 = new KeyValuePair<string, BigDecimal>("Reserve1", info.Reserve1);
            var blockTimestampLast = new KeyValuePair<string, BigDecimal>("BlockTimestampLast", new BigDecimal(info.BlockTimestampLast));

            return CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?>.Success(new List<KeyValuePair<string, BigDecimal>> { reserve0, reserve1, blockTimestampLast });
        }
    }
}