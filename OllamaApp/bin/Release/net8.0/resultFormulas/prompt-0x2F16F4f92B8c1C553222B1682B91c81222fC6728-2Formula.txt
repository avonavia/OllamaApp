//Method to check if a given address is the owner of the contract
    public bool IsOwner(string ownerAddress)
    {
        return Transactions[^1].FromAddress == ownerAddress;
    }

    //Method to calculate PNL after renouncing ownership
    public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>> Formula(TransactionInfo info, IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
    {
        if (!IsOwner(info.FromAddress))
            return new CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>>($"The address {info.FromAddress} is not the owner of the contract.");

        var result = new List<KeyValuePair<string, BigDecimal>>();
        //Assuming there are no token transfers in this transaction as per renounceOwnership method
        result.Add(new KeyValuePair<string, BigDecimal>(info.FromAddress, 0)); //No change in PNL for the owner after renouncing ownership

        return new CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>>(result);
    }