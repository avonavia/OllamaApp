//Method to reduce fee for transaction based on Solidity contract method
    public CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?> Formula(TransactionInfo info, IEnumerable<KeyValuePair<string, decimal>>? tokenPrices = null)
    {
        if (info.FromAddress != info.TaxWallet)
        {
            return new CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?>($"Only the tax wallet can reduce fee.");
        }

        //Subtract new fee from total fee in transaction
        if (info.Transfers != null && info.Transfers.Any())
        {
            foreach(var transfer in info.Transfers)
            {
                transfer.Fee = BigDecimal.Min(transfer.Fee, new BigDecimal(info.NewSellTax));
            }
        }

        return new CalculationResult<IEnumerable<KeyValuePair<string, BigDecimal>>?>();
    }