// This method is a direct translation of the Solidity mod function to C#. It performs a modulus operation on two BigInteger numbers, throwing an ArgumentException if the divisor is zero.
    // Note: The original Solidity function is marked as internal and pure which means it cannot modify state variables or call other non-pure functions. However, since this code is not part of a larger contract context in C#, these restrictions are not directly enforced.

    private BigInteger Mod(BigInteger a, BigInteger b, string errorMessage)
    {
        if (b == 0)
            throw new ArgumentException(errorMessage);

        return BigInteger.Remainder(a, b);
    }