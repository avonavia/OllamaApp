"""Make a C# Formula method for this Solidity contract method:

function burnTokens(TokenParams[] calldata params, bytes calldata signature) public notPaused nonReentrant {
        bytes32 hash = keccak256(abi.encodePacked(msg.sender));
        require(_verifySignature(signer, hash, signature), "Invalid signature");

        for(uint i = 0; i < params.length; i++) {
            TokenParams calldata param = params[i];
            require(param.tokenId.length == param.amount.length, "Invalid params");

            TokenData memory data = tokenData[param.token];
            require(data.isAllowed, "Token not allowed");

            if(data.tokenType == TokenType.ERC721) {
                for(uint j = 0; j < param.tokenId.length; j++)
                    IERC721(param.token).transferFrom(msg.sender, address(this), param.tokenId[j]);
            } else {
                IERC1155(param.token).safeBatchTransferFrom(msg.sender, address(this), param.tokenId, param.amount, "");
            }
            
            emit TokensDeposited(param.token, param.tokenId, param.amount, data.tokenType);
        }
    }

Return only a C# code. Follow all the code and answer rules in your system prompt"""